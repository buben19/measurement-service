FORMAT: 1A
HOST: http://localhost:8081/

# measurement-service

Simple service allowing user to save temerature measurements and find 
longest streak based on temperature tresholds.

## Measurements collection [/measurements]

### List all measurements [GET]

Get all stored measurements.

+ Response 200 (application/json)

        {
          "_embedded" : {
            "measurements" : [ {
              "id" : 1,
              "temperature" : 1.0,
              "timestamp" : "2019-12-31T22:00:00Z",
              "_links" : {
                "self" : {
                  "href" : "http://localhost:8081/measurements/1"
                },
                "measurements" : {
                  "href" : "http://localhost:8081/measurements"
                }
              }
            }, {
              "id" : 2,
              "temperature" : 1.0,
              "timestamp" : "2019-12-31T22:00:00Z",
              "_links" : {
                "self" : {
                  "href" : "http://localhost:8081/measurements/2"
                },
                "measurements" : {
                  "href" : "http://localhost:8081/measurements"
                }
              }
            } ]
          },
          "_links" : {
            "self" : {
              "href" : "http://localhost:8081/measurements"
            }
          }
        }

### Create new measurement [POST]

Send new measuremenmt o the server. It takes a JSON object containing a
measuremenet object costisting of temeperature value and timestamp.

+ Request (application/json)

        {
            "measurement": 22.0,
            "timestamp": "2020-01-01T00:00:00+02:00"
        }

+ Response 201 (application/json)

    + Headers

            Location: /measurements/1

    + Body
    
            {
              "id" : 1,
              "temperature" : 1.0,
              "timestamp" : "2020-01-31T22:00:00Z",
              "_links" : {
                "self" : {
                  "href" : "http://localhost:8081/measurements/1"
                }
            }

## Single measurement [/measurements/{id}]

### Get single measurement [GET]

Get single measurement identified by *id*.

+ Response 200 (application/json)

        {
          "id": 1,
          "temperature": 10.0,
          "timestamp": "2020-01-01T01:00:00Z",
          "_links": {
            "self": {
              "href":"http://localhost/measurements/1"
            },
            "measurements": {
              "href": "http://localhost/measurements"
            }
          }
        }
        
### Update measurement [PUT]

Update measurement identified by its *id*.

+ Response 204 (application/json)

### Delete measurement [DELETE]

Permanently delete measurement from database.

+ Response 204 (application/json)

## Measurement streaks [/measurements/streak{?min}{?max}{?start}{?end}]

### Get streak [GET]

Get longest streak of measurements within given bounds. If *start* and *end* parameters
are empty, eplication returns measurements within all day. Client can specify time period
of the day using *start* and *end* paremets.

Both *start* and *end* parameters must be set, if client desires to. Setting only one of 
them will have no efect.

+ Parameters

    + min (number) - Minimum temperature reading.
    + max (number) - Maximum temperature reading.
    + start (string) - Start of measurement reading.
    + end (string) - End of measurement reading.

+ Response 200 (application/json)

        {
          "start": "2020-01-01",
          "end":"2020-01-01"
        }